class Solution {
    public int maxProfit(int[] prices) {
         //at the begining the minimum price is the first price
         int buy_price = prices[0];
         //at the begining the minimum profit is always zero
         int profit = 0;

         for(int i=1 ; i<prices.length ; i++){
            //if the current price is less then update the buy_price

            if(prices[i]<buy_price){
                buy_price = prices[i];
            }
            else{
                //else chcek if we can get a better profit
                int current_profit = prices[i] - buy_price;
                profit = Math.max(current_profit, profit);   //Max number picked 
            }
         }
return profit;
    }   
}


//Input: prices = [7,1,5,3,6,4]
//Output: 5
//Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
//Note that buying on day 2 and selling on day 1 is not allowed because you must //buy before you sell.
